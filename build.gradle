apply plugin:'groovy'

def projectName = 'MetricClient'
description = "$projectName - Graphite and StatD client"

group = 'com.allthingsmonitoring.utils.MetricClient' // Class name
archivesBaseName = 'metricclient'
distsDirName = 'dist'
version = '1.1'

def authorString = 'Sebastian YEPES FERNANDEZ (syepes@gmail.com)'
def copyrightString = 'Copyright &#169; 2014 &#8211; Sebastian YEPES FERNANDEZ All Rights Reserved.'


//defaultTasks 'clean','build','groovydoc'
defaultTasks 'clean','build'


// http://svn.codehaus.org/griffon/builders/jidebuilder/trunk/build.gradle
// http://gparallelizer.googlecode.com/svn/trunk/build.gradle
configure([compileGroovy, compileTestGroovy]) {
  //groovyOptions.useAnt = true
  //compileGroovy.groovyOptions.fork = true
  groovyOptions.fork(memoryInitialSize: '128M', memoryMaximumSize: '1G')
  groovyOptions.encoding = 'UTF-8'
  //groovyOptions.optimizationOptions.indy = true
}

//configurations.compile.transitive = false
compileJava {
    options.encoding = 'UTF-8'
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

repositories {
  mavenLocal()
  maven { url 'http://repository.codehaus.org/' }
  mavenCentral()
}

dependencies {
  compile 'org.codehaus.groovy:groovy:2.2.+',
          'org.slf4j:slf4j-api:1.+',
          'ch.qos.logback:logback-core:1.+',
          'ch.qos.logback:logback-classic:1.+',
          fileTree(dir: 'libs', include: '*.jar')

  testCompile 'org.spockframework:spock-core:0.7-groovy-2.0', {
    exclude module: "groovy-all"
  }
}


groovydoc {
  dependsOn classes
  groovyClasspath = configurations.compile // http://issues.gradle.org/browse/GRADLE-1391
  destinationDir  = new File(( System.getProperty( 'groovydocDir' ) ?: project.buildDir.path + '/groovydoc' ), ( project.version.contains( '-SNAPSHOT' ) ? '' : project.version ))
  use = true
  includePrivate = true

  windowTitle = "$projectName"
  docTitle = "$projectName"
  header = "$projectName - v$project.version"
  footer = copyrightString

  link 'http://static.springsource.org/spring/docs/3.1.x/javadoc-api/', 'org.springframework.'
  link 'http://download.oracle.com/javase/6/docs/api/',                 'java.'
  link 'http://groovy.codehaus.org/api/',                               'groovy.', 'org.codehaus.groovy.'
  link 'http://commons.apache.org/net/apidocs/',                        'org.apache.commons.net.'
  link 'http:/"truezip.java.net/apidocs/',                              'de.schlichtherle.'
}


processResources{
  exclude 'config.groovy'
  exclude '*.sh'
}

jar {
  from ( configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } ) {
    include 'com/allthingsmonitoring/**'
    include 'net/razorvine/**'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
  }
  manifest {
    attributes 'Implementation-Title': project.description,
               'Implementation-Version': project.version,
               'Specification-Title': project.description,
               'Specification-Version': project.version,
               'Built-By': System.properties['user.name'],
               'Built-JDK': System.properties['java.version'] +' ('+ System.properties['java.vm.vendor'] +')',
               'Built-Date': new Date(),
               'Author': authorString
  }
}

